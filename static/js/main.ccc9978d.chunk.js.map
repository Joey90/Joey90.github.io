{"version":3,"sources":["helpers/colors.ts","components/Header.tsx","components/PageContainer.tsx","components/DimensionField.tsx","components/HelpText.tsx","components/HorizontalRule.tsx","components/TextField.tsx","components/Title.tsx","helpers/units.ts","pages/VerticalSensingField.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["secondary","StyledHeader","styled","header","Logo","img","Name","div","Header","src","PageContainer","main","Container","Label","label","Input","input","UnitSelect","select","Field","id","onChange","value","unitOptions","useState","toString","rawValue","setRawValue","unit","setUnit","useEffect","convertedValue","conversionFactor","rawParsedValue","parseFloat","isNaN","Math","abs","htmlFor","type","event","newRawValue","target","newUnit","find","u","toFixed","map","HelpText","p","HorizontalRule","Unit","span","ev","Title","h1","lengthUnits","velocityUnits","Result","VerticalSensingField","kvalue","setKvalue","tvalue","setTvalue","zvalue","setZvalue","d","result","DimensionField","TextField","GlobalStyle","createGlobalStyle","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccc9978d.chunk.js","sourcesContent":["export const primary = '#003C52';\r\nexport const secondary = '#001326';\r\nexport const tertiary = '#006084';\r\n\r\nexport const highlightBackground = '#99CCFF';\r\n","import styled from 'styled-components';\r\nimport { secondary } from '../helpers/colors';\r\n\r\nconst StyledHeader = styled.header`\r\n  width: 100%;\r\n  background: ${secondary};\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  flex: 0 1 auto;\r\n  height: 64px;\r\n  margin: 8px\r\n`;\r\n\r\nconst Name = styled.div`\r\n  color: white;\r\n  font-size: 32px;\r\n  padding: 16px;\r\n`;\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <Logo src=\"/fortress.png\" />\r\n      <Name>Safety Helper</Name>\r\n    </StyledHeader>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nconst PageContainer = styled.main`\r\n  margin: 16px;\r\n  max-width: 840px;\r\n`;\r\n\r\nexport default PageContainer;\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Unit } from '../helpers/units';\r\n\r\nconst ERROR_MARGIN = 0.00000001;\r\n\r\ntype Props = {\r\n  id: string;\r\n  label: string;\r\n  onChange?: (value: number) => void;\r\n  value: number;\r\n  unitOptions: Unit[];\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  margin: 24px 0 8px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 64px;\r\n`;\r\n\r\nconst UnitSelect = styled.select`\r\n`;\r\n\r\nconst Field: React.FC<Props> = ({ id, label, onChange, value, unitOptions }) => {\r\n  const [rawValue, setRawValue] = useState(value.toString());\r\n  const [unit, setUnit] = useState(unitOptions[0]);\r\n\r\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    const newRawValue = event.target.value;\r\n    setRawValue(newRawValue);\r\n\r\n    const convertedValue = parseFloat(newRawValue) * unit.conversionFactor;\r\n    onChange?.(convertedValue);\r\n  };\r\n\r\n  const onUnitChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\r\n    const newUnit = unitOptions.find((u) => u.label === event.target.value) || unitOptions[0];\r\n    if (newUnit !== unit) {\r\n      setRawValue((parseFloat(rawValue) * unit.conversionFactor / newUnit.conversionFactor).toFixed(3));\r\n    }\r\n    setUnit(newUnit || unitOptions[0]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const convertedValue = value / unit.conversionFactor;\r\n    const rawParsedValue = parseFloat(rawValue);\r\n    if (!isNaN(rawParsedValue) && Math.abs(convertedValue - rawParsedValue) > ERROR_MARGIN) {\r\n      setRawValue(convertedValue.toString());\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <Container>\r\n      <Label htmlFor={id}>{label}</Label>\r\n      <Input id={id} type=\"text\" value={rawValue} onChange={onInputChange} />\r\n      <UnitSelect value={unit.label} onChange={onUnitChange}>\r\n        {unitOptions.map(({ label }) => (\r\n          <option key={label} value={label}>{label}</option>\r\n        ))}\r\n      </UnitSelect>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default Field;\r\n","import styled from 'styled-components';\r\nimport { tertiary } from '../helpers/colors';\r\n\r\nconst HelpText = styled.p`\r\n  margin: 8px 0;\r\n  color: ${tertiary};\r\n`;\r\n\r\nexport default HelpText;\r\n","import styled from 'styled-components';\r\nimport { secondary } from '../helpers/colors';\r\n\r\nconst HorizontalRule = styled.div`\r\n  margin: 16px 0;\r\n  border-bottom: 1px solid ${secondary};\r\n`;\r\n\r\nexport default HorizontalRule;\r\n","import styled from 'styled-components';\r\n\r\ntype Props = {\r\n  id: string;\r\n  label: string;\r\n  onChange?: (value: string) => void;\r\n  value: string;\r\n  unit?: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  margin: 24px 0 8px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 64px;\r\n`;\r\n\r\nconst Unit = styled.span`\r\n`;\r\n\r\nconst Field: React.FC<Props> = ({ id, label, onChange, value, unit }) => {\r\n  return (\r\n    <Container>\r\n      <Label htmlFor={id}>{label}</Label>\r\n      <Input id={id} type=\"text\" value={value} onChange={(ev) => onChange?.(ev.target.value)} />\r\n      {unit && <Unit>{unit}</Unit>}\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default Field;\r\n","import styled from 'styled-components';\r\nimport { secondary } from '../helpers/colors';\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${secondary};\r\n`;\r\n\r\nexport default Title;\r\n","export type Unit = {\r\n  label: string;\r\n  conversionFactor: number;\r\n};\r\n\r\nexport const lengthUnits: Unit[] = [\r\n  { label: 'm', conversionFactor: 1 },\r\n  { label: 'mm', conversionFactor: 0.001 },\r\n  { label: 'in', conversionFactor: 0.0254 },\r\n];\r\n\r\nexport const velocityUnits: Unit[] = [\r\n  { label: 'm/s', conversionFactor: 1 },\r\n  { label: 'in/s', conversionFactor: 0.0254 },\r\n];\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport DimensionField from '../components/DimensionField';\r\nimport HelpText from '../components/HelpText';\r\nimport HorizontalRule from '../components/HorizontalRule';\r\nimport TextField from '../components/TextField';\r\nimport Title from '../components/Title';\r\nimport { highlightBackground, primary } from '../helpers/colors';\r\nimport { lengthUnits, velocityUnits } from '../helpers/units';\r\n\r\nconst Result = styled.div`\r\n  border: 2px solid ${primary};\r\n  background: ${highlightBackground};\r\n  padding: 4px;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst VerticalSensingField: React.FC = () => {\r\n  const [kvalue, setKvalue] = useState(1.6);\r\n  const [tvalue, setTvalue] = useState('0.0');\r\n  const [zvalue, setZvalue] = useState(0);\r\n\r\n  const k = kvalue;\r\n  const t = parseFloat(tvalue);\r\n  const z = zvalue;\r\n\r\n  const d = k * t + z;\r\n\r\n  const result = isNaN(d)\r\n    ? 'Please ensure all values are numbers'\r\n    : `Safety distance: ${d.toFixed(3)}m`;\r\n\r\n  return (\r\n    <>\r\n      <Title>Vertical Sensing Field</Title>\r\n      <DimensionField id=\"kvalue\" label=\"Value of K\" value={kvalue} onChange={setKvalue} unitOptions={velocityUnits} />\r\n      <HelpText>I don't know what K is but you definitely should if it's not 1.6m/s</HelpText>\r\n      <TextField id=\"tvalue\" label=\"Value of T\" value={tvalue} onChange={setTvalue} unit=\"s\" />\r\n      <HelpText>Enter some big T</HelpText>\r\n      <DimensionField id=\"zvalue\" label=\"Value of Z\" value={zvalue} onChange={setZvalue} unitOptions={lengthUnits} />\r\n      <HelpText>Zzzzz</HelpText>\r\n      <HorizontalRule />\r\n      <Result>{result}</Result>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default VerticalSensingField;\r\n","import { createGlobalStyle } from 'styled-components';\nimport Header from './components/Header';\nimport PageContainer from './components/PageContainer';\nimport VerticalSensingField from './pages/VerticalSensingField';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    font-family: Arial;\n  }\n\n  body {\n    margin: 0;\n  }\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Header />\n      <PageContainer>\n        {/* TODO: routing etc. */}\n        <VerticalSensingField />\n      </PageContainer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}